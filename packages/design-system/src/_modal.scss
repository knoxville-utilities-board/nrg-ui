dialog .btn-close {
  position: absolute;
  top: 0;
  right: 0;
  padding: 1rem;
  cursor: pointer;
}

dialog .modal-header {
  min-height: 1em;
}

////////////////////////////
// Positions
////////////////////////////

dialog.centered {
  max-height: 90vh;
  width: 90vw;
  max-width: 950px;
}

dialog.flyout-left {
  margin: 0 auto 0 0;
  height: 100vh;
  max-height: 100vh;
  width: 400px;
  max-width: 100vw;
}

dialog.flyout-right {
  margin: 0 0 0 auto;
  height: 100vh;
  max-height: 100vh;
  width: 400px;
  max-width: 100vw;
}

////////////////////////////
// Animations
////////////////////////////

dialog {
  transition: all 0.3s ease allow-discrete;
}

@media (prefers-reduced-motion) {
  dialog {
    transition: all 0s ease allow-discrete;
  }
}

/* Animation end for open, animation start for close */
dialog[open].centered {
  opacity: 1;
  transform: translate3d(0,0,0);
}

/* Animation end for close */
dialog.centered {
  opacity: 0;
  transform: translate3d(0,10vh,0);
}

/* Animation start for open */
/* Needs to be after the previous dialog[open] rule to take effect,
    as the specificity is the same */
@starting-style {
  dialog[open].centered {
    opacity: 0;
    transform: translate3d(0,10vh,0);
  }
}

/* Animation end for open, animation start for close */
dialog[open].flyout-right {
  transform: translate3d(0,0,0);
}

/* Animation end for close */
dialog.flyout-right {
  transform: translate3d(100%,0,0);
}

/* Animation start for open */
/* Needs to be after the previous dialog[open] rule to take effect,
    as the specificity is the same */
@starting-style {
  dialog[open].flyout-right {
    transform: translate3d(100%,0,0);
  }
}

/* Animation end for open, animation start for close */
dialog[open].flyout-left {
  transform: translate3d(0,0,0);
}

/* Animation end for close */
dialog.flyout-left {
  transform: translate3d(-100%,0,0);
}

/* Animation start for open */
/* Needs to be after the previous dialog[open] rule to take effect,
    as the specificity is the same */
@starting-style {
  dialog[open].flyout-left {
    transform: translate3d(-100%,0,0);
  }
}

/* Animation end for open, animation start for close */
dialog[open]::backdrop {
  background: rgba(0, 0, 0, 0.85);
}
dialog[open].inactive::backdrop {
  background: transparent;
}

/* Animation end for close */
dialog::backdrop {
  background: rgba(0, 0, 0, 0);
  transition: all 0.3s ease allow-discrete;
}
@media (prefers-reduced-motion) {
  dialog::backdrop {
    transition: all 0s ease allow-discrete;
  }
}

/* Animation start for open */
@starting-style {
  dialog[open]::backdrop {
    background: rgba(0, 0, 0, 0);
  }
}
